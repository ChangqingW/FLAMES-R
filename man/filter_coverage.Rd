% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/model_decay.R
\name{filter_coverage}
\alias{filter_coverage}
\title{Filter transcript coverage}
\usage{
filter_coverage(x, filter_fn = convolution_filter)
}
\arguments{
\item{x}{The tibble returned by \code{\link{get_coverage}}, or a BAM file path, or
a GAlignments object.}

\item{filter_fn}{The filter function to apply to the coverage values. The function
should take a numeric vector of coverage values and return a logical value (TRUE if
the transcript passes the filter, FALSE otherwise). The default filter function is
\code{\link{convolution_filter}}, which filters out transcripts with sharp drops /
rises in coverage.}
}
\value{
a tibble of the transcript information and coverages, with transcipts that
pass the filter
}
\description{
Filter the transcript coverage by applying a filter function to the
coverage values.
}
\examples{
# Create a BAM file with minimap2_realign
temp_path <- tempfile()
bfc <- BiocFileCache::BiocFileCache(temp_path, ask = FALSE)
file_url <- 'https://raw.githubusercontent.com/OliverVoogd/FLAMESData/master/data'
fastq1 <- bfc[[names(BiocFileCache::bfcadd(bfc, 'Fastq1', paste(file_url, 'fastq/sample1.fastq.gz', sep = '/')))]]
genome_fa <- bfc[[names(BiocFileCache::bfcadd(bfc, 'genome.fa', paste(file_url, 'SIRV_isoforms_multi-fasta_170612a.fasta', sep = '/')))]]
annotation <- bfc[[names(BiocFileCache::bfcadd(bfc, 'annot.gtf', paste(file_url, 'SIRV_isoforms_multi-fasta-annotation_C_170612a.gtf', sep = '/')))]]
outdir <- tempfile()
dir.create(outdir)
fasta <- annotation_to_fasta(annotation, genome_fa, outdir)
minimap2_realign(
  config = jsonlite::fromJSON(
    system.file("extdata", "config_sclr_nanopore_3end.json", package = "FLAMES")),
  fq_in = fastq1,
  outdir = outdir
)
x <- get_coverage(file.path(outdir, 'realign2transcript.bam'))
nrow(x)
filter_coverage(x) |>
  nrow()
}
