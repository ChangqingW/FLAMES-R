% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/find_barcode.R
\name{find_barcode}
\alias{find_barcode}
\title{Match Cell Barcodes}
\usage{
find_barcode(
  fastq_dir,
  stats_file,
  out_fastq,
  ref_csv,
  MAX_DIST,
  UMI_LEN = 10L,
  left_seq = "CTACACGACGCTCTTCCGATCT",
  min_length = 20L,
  reverse_complement = TRUE,
  fixed_range = FALSE
)
}
\arguments{
\item{fastq_dir}{directory containing fastq files to match}

\item{stats_file}{NEEDED}

\item{out_fastq}{output filename for matched barcodes}

\item{ref_csv}{NEEDED}

\item{MAX_DIST}{int; maximum edit distance}

\item{UMI_LEN}{int; length of UMI sequences}

\item{left_seq}{String; sequence that appears at the left of the barcode}

\item{min_length}{int; minimum read length to be filtered after timming barcodes}

\item{reverse_complement}{boolean; whether to check the reverse complement of the reads}

\item{fixed_range}{boolean; deprecated, whether to skip finding flanking sequence by infering
its position from previous reads. Setting to \code{TRUE} may decrease performance and accuracy.}
}
\value{
returns a list containing statistics of the reads demultiplexed.
}
\description{
Match cell barcodes in the given fastq directory with the given barcode allow-list. For each read, the left flanking
sequence is located, FLAMES then takes the next 16 characters and match it to barcodes in the allow-list. If there is an unambigious match
within the given edit distance (\code{MAX_DIST}), the barcode and following \code{UMI_LEN} characters are tirmmed, along with potential
polyT tail. The trimmed read is then saved to \code{out_fastq}, with the identier field formatted as [barcode]_[UMI]#[original read ID].
}
\examples{
outdir <- tempfile()
dir.create(outdir)
bc_allow <- file.path(outdir, 'bc_allow.tsv')
R.utils::gunzip(filename = system.file('extdata/bc_allow.tsv.gz', package = 'FLAMES'), destname = bc_allow, remove = FALSE)
find_barcode(
   fastq_dir = system.file('extdata/fastq', package = 'FLAMES'),
   stats_file = file.path(outdir, 'bc_stat'),
   out_fastq = file.path(outdir, 'demultiplexed.fq.gz'),
   ref_csv = bc_allow,
   MAX_DIST = 2,
   UMI_LEN = 10
)
}
