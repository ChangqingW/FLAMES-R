% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sc_DTU_analysis.R
\name{sc_DTU_analysis}
\alias{sc_DTU_analysis}
\title{FLAMES Differential Transcript Usage Analysis}
\usage{
sc_DTU_analysis(sce, min_count = 15)
}
\arguments{
\item{sce}{The \code{SingleCellExperiment} object from \code{sc_long_pipeline},
with the following metadata:
file is required under the output folder of the SCE object.}

\item{min_count}{The minimum UMI count threshold for filtering isoforms.}
}
\value{
a \code{data.frame} containing the following columns:
\describe{
 \item{gene_id}{ - differentially transcribed genes }
 \item{X_value}{ - the X value for the DTU gene}
 \item{df}{ - degrees of freedom of the approximate chi-squared distribution of the test statistic }
 \item{DTU_tr}{ - the transcript_id with the highest squared residuals}
 \item{DTU_group}{ - the cell group with the highest squared residuals}
 \item{p_value}{ - the p-value for the test}
 \item{adj_p}{ - the adjusted p-value (by Benjamini–Hochberg correction)}
}
The table is sorted by decreasing P-values. It will also be saved as \code{sc_DTU_analysis.csv} under the
output folder.
}
\description{
Chi-square based differential transcription usage analysis. This variant is meant for single cell data.
Takes the \code{SingleCellExperiment} object from \code{sc_long_pipeline} as input.
Alternatively, the path to the output folder could be provided instead of the SCE object.
}
\details{
This function will search for genes that have at least two isoforms, each with more than \code{min_count} UMI counts.
For each gene, the per cell transcript counts were merged by group to generate pseudo bulk samples.
Grouping is specified by the \code{colLabels} of the SCE object.
The top 2 highly expressed transcripts for each group were selected and a UMI count matrix where
the rows are selected transcripts and columns are groups was used as input to a chi-square test of independence (chisq.test).
Adjusted P-values were calculated by Benjamini–Hochberg correction.
}
\examples{
outdir <- tempfile()
dir.create(outdir)
bc_allow <- file.path(outdir, "bc_allow.tsv")
genome_fa <- file.path(outdir, "rps24.fa")
R.utils::gunzip(filename = system.file("extdata/bc_allow.tsv.gz", package = "FLAMES"), destname = bc_allow, remove = FALSE)
R.utils::gunzip(filename = system.file("extdata/rps24.fa.gz", package = "FLAMES"), destname = genome_fa, remove = FALSE)

sce <- FLAMES::sc_long_pipeline(
  genome_fa = genome_fa,
  fastq = system.file("extdata/fastq", package = "FLAMES"),
  annotation = system.file("extdata/rps24.gtf.gz", package = "FLAMES"),
  outdir = outdir,
  barcodes_file = bc_allow,
  config_file = create_config(outdir, oarfish_quantification=FALSE)
)
group_anno <- data.frame(barcode_seq = colnames(sce), groups = SingleCellExperiment::counts(sce)["ENSMUST00000169826.2", ] > 1)
SingleCellExperiment::colLabels(sce) <- group_anno$groups
sc_DTU_analysis(sce, min_count = 1)
}
