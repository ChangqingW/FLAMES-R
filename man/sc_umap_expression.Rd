% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sc_annotate_plots.R
\name{sc_umap_expression}
\alias{sc_umap_expression}
\title{FLAMES UMAP plots}
\usage{
sc_umap_expression(
  gene,
  multiAssay,
  impute = FALSE,
  grided = TRUE,
  n_isoforms = 4,
  transcript_ids,
  n_pcs = 40,
  col_low = "#313695",
  col_mid = "#FFFFBF",
  col_high = "#A50026"
)
}
\arguments{
\item{gene}{The gene symbol of interest.}

\item{multiAssay}{The \code{MultiAssayExperiment} object from \code{combine_sce()}.}

\item{impute}{Whether to impute expression levels for cells without transcript counts}

\item{grided}{Wheter to produce multiple UMAP plots, with each showing expression level for an isoform, to allow plotting more than 2 isoforms.}

\item{n_isoforms}{The number of expressed isoforms to keep. \code{n_isoforms} > 2 requires \code{girded = TRUE}}

\item{transcript_ids}{specify the transcript ids instead of selecting the top \code{n_isoforms}}

\item{n_pcs}{The number of principal components to generate.}

\item{col_low}{Color for cells with low expression levels in UMAPs.}

\item{col_mid}{Color for cells with intermediate expression levels in UMAPs.}

\item{col_high}{Color for cells with high expression levels in UMAPs.}
}
\value{
a \code{ggplot} object of the UMAP(s)
}
\description{
Plot expression UMAPs of top n isoforms of a gene
}
\details{
This function takes the combined \code{MultiAssayExperiment} object from
\code{cexample("MultiAssayExperiment")ombine_sce} and plots UMAPs for each isoform of \code{gene}, where cells
are colored by expression levels. When \code{grided = TRUE}, the UMAPs are combined into a grid, along with the isoforms' visualization along genomic coordinates. Produces a single UMAP with isoform expressions colored by \code{col_low} and \code{col_high} when \code{grided = FALSE}.
}
\examples{
source(system.file("examples/scmixology1.R", package = "FLAMES"))
scm_lib80 <- scuttle::addPerCellQC(scm_lib80)
scm_lib20 <- scuttle::addPerCellQC(scm_lib20)
qc_80 <- scuttle::quickPerCellQC(colData(scm_lib80))
qc_20 <- scuttle::quickPerCellQC(colData(scm_lib20))
qc_80$discard[scm_lib80$sum < 10000] <- TRUE
qc_20$discard[scm_lib20$sum < 20000] <- TRUE

combined_sce <- combine_sce(
    short_read_large = scm_lib80[,!qc_80$discard],
    short_read_small = scm_lib20[,!qc_20$discard],
    long_read_sce = scm_lib20_transcripts,
    remove_duplicates = FALSE)

sc_umap_expression(gene = "ENSG00000108107", multiAssay = combined_sce)

}
